name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt

    - name: Wait for DB to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        sleep 30

    - name: Test Python code
      run: |
        python -m unittest discover app

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build

    - name: Run Docker containers
      run: docker-compose -f docker-compose.yml up -d

    - name: Wait for services to be ready
      run: sleep 30

    - name: Run tests in Docker container
      run: docker-compose -f docker-compose.yml run app python -m unittest discover app

    - name: Get DB container logs
      if: failure()
      run: |
        echo "Fetching logs for DB container"
        docker logs $(docker ps -q --filter name=db)
