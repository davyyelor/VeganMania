version: "3"
services:
  app:
    build: ./app
    ports:
      - "5000:5000"
    depends_on:
      - db
      - elasticsearch
    networks:
      - backend-network
      - frontend-network
    restart: always
    volumes:
      - ./app:/app

  db:
    build: ./db
    ports:
      - "3306:3306"
    volumes:
      #- ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/var/lib/mysql
    networks:
      - backend-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
      - backend-network
      - frontend-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - frontend-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - backend-network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch/init-recipes.sh:/usr/share/elasticsearch/init-recipes.sh

networks:
  backend-network:
  frontend-network:

volumes:
  data:
  elasticsearch_data:
